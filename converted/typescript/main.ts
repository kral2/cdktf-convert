import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as docker from "./.gen/providers/docker";

import { Construct } from "constructs";
import { App, TerraformStack } from "cdktf";

class MyStack extends TerraformStack {
  constructor(scope: Construct, id: string) {
    super(scope, id);

    new docker.provider.DockerProvider(this, "docker", {
      host: "unix:///var/run/docker.sock",
    });
    const dockerImageNginx = new docker.image.Image(this, "nginx", {
      keepLocally: true,
      name: "nginx:latest",
    });
    const dockerContainerNginx = new docker.container.Container(
      this,
      "nginx_2",
      {
        image: cdktf.Token.asString(dockerImageNginx.imageId),
        name: "cdktf-nginx",
        ports: [
          {
            external: 8000,
            internal: 80,
          },
        ],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dockerContainerNginx.overrideLogicalId("nginx");
  }
}

const app = new App();
new MyStack(app, "typescript");
app.synth();
